// 여태까지 MySQL과 Spring을 연동하는 방식을 파악하였다.
// 그러므로 현재 예제를 토대로 유사한 연습문제를 작성해보자!
// ************************************************************************************************
// 1. MySQL에 Table을 작성한다.
//    (Entity: ItemMania
//     id, pw, nickname, item, price)
// 1) MySQL -> mysql -u bitai -p
// 2) show databases;
// 3) create databases gamedb;
// 4) use gamedb;
// 5) show tables;
// 6 예) create table board( board_no int not null auto_increment,
//    title varchar(200) not null,
//    content text null,
//    writer varchar(50) not null,
//    reg_date timestamp not null default now(),
//    primary key(board_no));

// 6-1 실제) create table ItemMania( id_no int not null auto_increment,
//    pw varchar(50) not null,
//    nickname varchar(100) not null,
//    item varchar(200) not null,
//    price varchar(200) not null,
//    reg_date timestamp not null default now(),
//    primary key(id_no) );

// private int idNo;
// private int pw;
// private String nickname;
// private String item;
// private int price;
// private Date regDate;

// 7) describe itemMania;
// 8) select * from itemMania;

// ************************************************************************************************

// 2. entity package에 실제 사용할 Entity class를 작성한다.

// ************************************************************************************************

// 3. Controller package에 URL을 처리할 ItemManiaController를 만든다.
// 4. @Service에 대한 인터페이스와 구현체를 작성한다.
// 5. @Repository에 대한 DB 처리를 실제로 수행한다.
// 6. 각각의 필요한 HTML 파일들을 작성한다.
// 7. HTML 연동 순서
// 7-1. list(모든 게시글을 확인할 수 있는 형태)
// 7-2. register(게시글을 등록할 수 있도록 만든다.)
// 7-3. remove(게시글을 삭제할 수 있도록 만들어본다.)
// 7-4. read(게시글을 실제로 읽을 수 있도록 만들어본다.)
// 7-5. modify(게시글을 수정할 수 있도록 만들어본다.)